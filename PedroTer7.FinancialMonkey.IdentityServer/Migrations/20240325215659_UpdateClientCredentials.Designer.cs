// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PedroTer7.FinancialMonkey.IdentityServer.Contexts;

#nullable disable

namespace PedroTer7.FinancialMonkey.IdentityServer.Migrations
{
    [DbContext(typeof(CredentialsContext))]
    [Migration("20240325215659_UpdateClientCredentials")]
    partial class UpdateClientCredentials
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PedroTer7.FinancialMonkey.IdentityServer.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("UTC_TIMESTAMP(0)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(74)
                        .HasColumnType("varchar(74)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDateTime = new DateTime(2024, 3, 25, 18, 56, 59, 580, DateTimeKind.Local).AddTicks(3492),
                            Email = "adm1@financialmonkey.com",
                            Password = "PHMO1FCN8:0c1028405133c1d8ca30b2efd783258b04d3f714b6bde765ad0ed5d94a19019b"
                        },
                        new
                        {
                            Id = 2,
                            CreationDateTime = new DateTime(2024, 3, 25, 18, 56, 59, 580, DateTimeKind.Local).AddTicks(3573),
                            Email = "adm2@financialmonkey.com",
                            Password = "9M79NOXXQ:810a47b58436066a4d8c7c281357e251c01f162f466af7403ff55d34dafa69d3"
                        });
                });

            modelBuilder.Entity("PedroTer7.FinancialMonkey.IdentityServer.Entities.ClientCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AllowedGrantTypes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("AllowedScopes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("UTC_TIMESTAMP(0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("ClientCredentials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowedGrantTypes = "password",
                            AllowedScopes = "admin",
                            CreationDateTime = new DateTime(2024, 3, 25, 18, 56, 59, 580, DateTimeKind.Local).AddTicks(4656),
                            Description = "Client for admin users authentication",
                            Key = "6f65a068-e943-11ee-b79b-03fb35a7a73f",
                            Name = "Admin auth client",
                            Secret = "9297320e-e943-11ee-882f-bf8013a44c6f"
                        },
                        new
                        {
                            Id = 2,
                            AllowedGrantTypes = "password",
                            AllowedScopes = "customer",
                            CreationDateTime = new DateTime(2024, 3, 25, 18, 56, 59, 580, DateTimeKind.Local).AddTicks(4664),
                            Description = "Client for customer users authentication",
                            Key = "ca32537e-e943-11ee-b968-2f83f8d52888",
                            Name = "Customer auth client",
                            Secret = "d0dec608-e943-11ee-ad8c-532040233037"
                        });
                });

            modelBuilder.Entity("PedroTer7.FinancialMonkey.IdentityServer.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("UTC_TIMESTAMP(0)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(74)
                        .HasColumnType("varchar(74)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDateTime = new DateTime(2024, 3, 25, 18, 56, 59, 580, DateTimeKind.Local).AddTicks(1585),
                            Email = "customer_1@gmail.com",
                            Password = "VOEJGJAYN:2edd7175aea0009de3555b2a7945094ea30ca4637d2709b1f86cf30730e90e88"
                        },
                        new
                        {
                            Id = 2,
                            CreationDateTime = new DateTime(2024, 3, 25, 18, 56, 59, 580, DateTimeKind.Local).AddTicks(2130),
                            Email = "customer_2@somecorp.com",
                            Password = "FO8QU3QAF:c8b4c93fd461e0dab4f39d3817eb9b89e9dea69efdc879467cbcb23684831b99"
                        },
                        new
                        {
                            Id = 3,
                            CreationDateTime = new DateTime(2024, 3, 25, 18, 56, 59, 580, DateTimeKind.Local).AddTicks(2172),
                            Email = "customer_3@thirdcopr.com",
                            Password = "AGJVE5YKA:5d1735c9713aaee14cfa1572c147aeb864efca659b221fe62d10e5f6fda10216"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
